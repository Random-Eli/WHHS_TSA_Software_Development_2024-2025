<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerEditing.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAABTCAYAAABwH9mLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAFiNJREFUeF7tnQm4dlVVx8FZBHFCxAGcFVAhRdEECVFJwcAgISgCCiExw0ghBwwh
        p3y0AdQkNEsxQ1FBQ4NQzFBKLZVQ1BLNLJoHG2y6/n/7rHPYe519znvuved+3/d+rN/z/J/7nrX22e9w
        91lnT2fvbYIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIJNz8rKyoOln5feNqJfkZ5gpwyiNHtb2ruYKQhW
        hwrP7aV9pGOlM6VXSS+XTpIeaslGUbptJQp2rruau0O2B7k0dzfX7Cjve7r32s1cmw19hoOlf5Km8P/S
        0+3UKvJz8cPxZgo2EfrN7y7l5Qtta+5Vo3Pv6vJaV34LUeZ3kU6RviH9rzTEDdIxdloV+W8l/TOJM95k
        7g7Z/qRxdbzPXLOjvF/bvEXHv0t3MvdmQe//u+mTrKx8VCLIDun3JPiqnVpF/k0eAPRelJsj7fAWi36D
        E/jhHbube9Xo3O9vsih4srnnhYwlLuzV8GHpDpZFgewRACag92+//55mGsTS/aNU/c1Bvk0WAPQet5Ge
        J3HD+LCZb7HoN1jOAKBMnyP9Q8p+9Xxd6rU3ZVuGAPAf0pYSABa22S3dFhEAlP/jpD9I79QQAWAZA4Ay
        fKRUa4NycVwr0QH1Oum9ZqtxlWXXIduyBIDtzb1Z0PuvOQDo73Ol33H6qgSflrzv8JTRDCiv66WcCADL
        FgCU2R2kj6dsSz4rPVq6lSVN6PhOEtX+GvtYsoSOJwUAkJ02ZCczz47y9gHgP6VlDgCr5bMpoxlQXl9s
        suyIALCEAeDwJs+CL0g7W5Iq8l+ZUpa8zdwJHU8OAJsKvf/WFgCeIp3mxJ0fqLl538NSRjOgvL4k5UQA
        WMIAcHmTZ8Fh5h5EaRhOa6H58DHpTHMndDy1CeDHv08zVxX5d5bOkv5Y+kuJi/jbElXSt0gHWdIe8vkA
        8F9SEQB0TC3k9VL+mdCxlmRWlO9S9QEo3/Mkfg/fZ0RHYPtbvdyS95CPsvNi6VMS/z86Yvn/fV7isy+c
        6zAV5UUn5e7SKyVqtX8jfcdE2fwj6Y3SI+yUQZTmjtJB0sUSneWUO/J4l3SEpZkcAGRnmPxJEr8XZZfm
        KL/DpdJJlmbjAoAy2kHy/8RvSgvHGUkjnSw9SqoWXNln7QOQnX/mT0tTxsw/IPUuEtl8AKAg7GBu/DtK
        78PhIFBuSNNE+S5bAPD/0xrXWPIO2Wg+MmIwpbP5Cun+duqa0PmU0V+WxoazW5hfcZ6d2kO+7aV3kHAE
        hmnpTPf0AoBsXHsEUsrfENxUj2xeFswWAL6vya/gInOvG+U1dwD4BYl/1FQ+Zad2yLYoAPBP8dAk6k1g
        mgvl3X7/vcxURf77NMmWLwDomIufO+Vq+GvpvpbFqtG5L5D+j4xWwXPs9A7ZKMfULKfA/8ZTCwC1claj
        9lvPFgCOb/IreJm5143ymi0AyHao9N/JW8IwFP8cRihqnGhZJHTsAwB5pgCgv7SRqY7m3Cg9KJ28QSj/
        d6d3Wln5lvSGEbW/08fs1Cryb4kB4BWNuQdVX+50f5qO+lxnWawKnXdfydcUOb5AoslJOaAJ4rnasuiQ
        7ZlS7cZD2SMfLmZqzkMUAUDHh0n/mjwlNGlfI/2iNDYfZ7YAcEaTX8HJ5l43ymuWAKBj7h4+Df/MZ1qS
        hI7vJ9Euy/m6uRM6rgYAiYvfB5ibpIVtw/Wi96DPgbvdFPjee9upVeRnyBY2KgDQFENf4U0yaCa1vttY
        ctIzfdVX+/kex0m3tmSk20NiTonnhZZkMjrnqObUDt7vsebukM33gf29dFtz47+t9EkcGQQD+jDyz853
        pm+ghg8AtZrQCyU/4nZ+8vSZLQDUovJshUZ5zRUAmHDiOcvcBbL/jMQ/iAuKO8uvS9uZG38tANDR8i/p
        6GbonJqtx3wRei/aq4zIjInPOTo6A0pDJ9vTpB3NtCEof3+XutxcBbKf27gLippZi+x8dl8L4+7aBZSp
        6JydJH6H50unmrlAdpoJOcWokF7vmqwllKteP5lsd5ZqgbwLAHp9N8nPpaEm0jVDW2SjTHyNBI7ZAsDZ
        TX4Fp5h73SivuQLAzzXmgsG7oHzUBKqz+2T3AYA2IncHzxPtlGAA/UZ+GHAoAFzXuDuo7t/Z3D3kOyel
        KtnD3LOg/OhPOUT6EJln/I/UfTa9rnXCHWXuHvK9tUlSkAeA/RpTwRnm7iEfD+F5ZgsAVDs8LzX3ulFe
        cwWACxtzBxF0sACNofN8ABhi8J+yEej96JCl7f72EdF+fZad0iEbbVR8tXNaUZ3cz06ZBeXnJwL1AoBs
        NN98T/c7zV1Ffvp7PCeYe03o/EdIPyr9qkSVvhb0wXcK+xoCDDYL5aNp4MkDgG+awCHm7iHfMU2SgtkC
        wLOa/AouMPdClHYXe1lF/rkCgG9bkedgL/gYOm9qAKCA3NNO21D0Pjx9OVQga3S1NL2m72IqNHdmq9ko
        Lz8VuBYA7t24Cl5n7iryc7F6XmDuyegcgg/9XIziTKWYF6LXzDfx3MPcPeQ7sUlSkAeAmn9w3oN8T22S
        FMwWAOgp9XzB3AtRWmac0XPJJItaB8tcAeC3G3MHkyW6dv1q0HlDAaDWy3uJnbah6H3ax3wvkWpt/1Zt
        dfBGO5Vz28BBQa2d04p5EXCxnbpulNefNVl21AIAbV7PogDwmCZZwejkMI/S07H7wXRmH/oYKLe/IdVq
        l13zUa9fmqwl9zF3D/l+vElSkAeAmn9/c/eQj2aKZ7YAQA8nM6M8D7ckgyjNAZLvzKBtl/eMzhUAqLZ5
        djJ3D/mK3tQc+YYCAP0hzDPwHGinbhh6j/b772qmQSxdPhUYvpacIygNqwTB5820bpSXb9vXAgAdWb4J
        8B5zV5H/h5tkBWmm3VSUnglHHtr7DMGxyEYqI/rr03FzyQMAk908g7Uo+WrN6jwA0FzzPNvcPeT7iSZJ
        wTwBAJQZC0143mXuQZSmNpHhzeZO6HiuAMDsP8+h5i6QnaGkf5N4wIl2MW24bkaZXtcCALZbSwzH+R7o
        G+zUDUPv0X7/tTwLAJsrAPiq9VAnoG8q8PkHZ5vKx9TYHGbyPcrck1B6pvjm8OxKr99IttOT92YYn89H
        jWpV8MGOcvl8pyLkAYAhUc+rzN1DPmYyemYNAAy70O7xvMKSFMjOlMja8CFV6H0tWULHcwUA5nJ7LjN3
        gew0R3Lo1X2MufH7AOD/4bUq2o+Ze0NQ/ssaAPzknSvMVSA7z1V4zjZ3gexU/xmLz1nVZCClZzk7bgI5
        rzV3gex+TL5oXuo1TQlf02Vo7naWpEM2Lm7Km6cLAKDjv2vMHXzf3jCnbA+Qan1D8wUAUIYva/LtQTuJ
        O+jjJcbij5Zqs6fgTVIR1XU8SwAA2fgsnjdLKarr7+0kPp//wa5PGRg69gGAgpL/w8nHfx6+w6aYCrxs
        AYC1InKYO8GzFDxi/hBLRrp7SR6GX2l2pUk3+svvzkhIbSLQqpYaU3om5fAb5ZBvcZHpuFZeupmhLTqu
        zTLlkfjbWxLSELh8n0iLDwC1uzpzC7pOZ71m/kHbN+SZNwCAMr2syXtN0BnY6zGXbc4AwENHQ1DFZBpt
        7aGPYthMxz4A9DoUdVyr9r3e3LOjvJc1ALQdizncAbmjFXdtHb8EZwVqjgwn/pVUu3sS5Fe9YpPOqT3l
        Sp8FD+swHPhbkp/81XIvyyah492kWicxfRsfkZgSPDaK4wMAfRC178p7/L5E89UHsJwNCQB0CK72YQ3g
        4nu0ZVMg+2wBAGQfqqkMwWOevlZSCwC9AibbHybvzVANXPODKWMo32UNAD/bZFmFqb/pM7bo+D3JMx1q
        m2uazajzeGx3CrUL9xmWTYdsvq9giNp3LAIAyFbr3a/xm5Kf3j5/AGhR5lSLqMotgguHzpqxIZFZAwDI
        R6+ob5N5+KfST1Frp00NAA9P3pJLzT0ryndZAwBDfDwsVYMqfm9UQzY6dP+WBCNwZybY39FOWxM6v/as
        Sw7V7odIrBOQUx2mlJ0RgaFHi2lKMuW41tzpBQCQnfkflL8a9E0xeYtlxn2ajQsALXoTpkD+knSN9BcS
        /2gWbGBslbHRKUOF20o8eZWrFl2ZzJKnGV23Tn6qUD8pEW35THTK0CNNu4xRja796ZGPO0P+Xi82Vw/5
        fsSlRb052+tFebYBYHSSjvz3b5Kl+eZ5ACDg3S0lGkD+9tHv2QIAKD8KKL9LW04+J1FGuGNWh2plp43+
        QxIFnObjn0s0A1genbK1rnUAcpQXy9rxdB3v034+5lscKKUAo7/cjemPaFUsbJMjHzcGmjN8Xz43swr5
        Hml2oP7SAenLzNi0Z55XID+CEWs5fkbixpo6rvWXRUiYCp/nt8meUenQmw6OrQfrQ78tHagt7A0wpHbO
        RldD0uu2J547Ru2cVm1Vd3ClniAINgO6KJl/8Il0eS6GjqzuwRi95lzfzBqC3uyigysIgi0EXZyPXaDv
        kXr9GuDS1UQfwODkmyAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIWlZWVp4h8dRiq95S3qtB5z/S
        5Ye63WuCINiC0MXp14Vb0/52LTq/tvT34GPYWzL63PtKo6sCB8FSowIeAcChz8tjw2zTxjoBHzVzEGx9
        qIBHAMjQZz1JylfeiQAQbL2ogLO/AIt8tHqvudaEzq9tT7VMAaBd8KQlAkAQTEUXDDseeyIABMHWgi4K
        tpZmHfgnSMUmGDquLb45GgDkZ188tn6j040lq9e1opPOZ+MU1gBkTQI+48Il4VqUdk0BQOlY7ITfhCXp
        nyixvNfgvnxBUEWFhrX9WDewFeu31zZi2CVL0+pF5i6Q/Q0uXbfdlV6/0/k+ZK4e8rEmHAtgfkPKYWlt
        tkRjjf3adlPVACA7a8g9V2K9unwpa1aWpROO9RQJNvnnQ9V1+GRnjbuDJRbO9IuxshIR69c92JIXyM6F
        T961lXfb9+1tEyYb6zayPLbfQKOF9QPZSXnD9moItiJUUO4hseFDzuPM3SHbsxtXwdXm7pCN1Y5ZmDPn
        1ebGP6kTUHZW6WGhyjHY0IJg4+kFAGwS6/+NQaBpFwjN2duy6ZCNOzAbaE7heDutQzYu8EV82pIndMz2
        2kMr5XpYB7G6JH0QFKig+AvjPHN1yFbbwoo7Z7Fct46pknq+19z4FwYA2bi4/NZaQ9Q2pSgCgI7Zso27
        5hRqG2IUAUDH3PlrG3+McaqdntDxqgKAXh/RmArYQIMlt/2ejS3sP9BtSBsEVVRI/CaoN5mrQ7YvNa4e
        T7UkCR37YTmWnM53RZ4SAM5tXAVUlVn2+cnSURJV9iF8AGC3Gw/58T7kxzLcb5GG8AGANe49LFvNuv5P
        kfD7Pfy4ULtFR/X6HRK75vhFS/lc2NGFlpz0V0s5V0n0X7B/JX0azIisfYfTLYsgqKNCQiHyPMDc+Lmr
        1+60cJYlS+iYNeFzzjFXQsejAUDHNCF8m5+L4mBL0iFbbSNW6AKAXtNBRxDKob1ey+/pydunCwB6zd2f
        rbpy2H+haHPr+IGS38uv12ci28JOQNl4T6r0OUXgBdnYwYqdf78isY8Aa/4/3txBMIwVmpzTzIWvdsdr
        udaSkY7tx32g2N/cCR0vCgDckT3VvQdl58Ko7aSTB4B2w5CcS8zdQz42ofDkAeCAxlTQa+OD7H6npS+a
        q0O2KQGAC9vv6EuNg92ae5uxyFZdHTkIBlGheY2Uk1/YFzemjvyi44Lf3tKxuWTOl1MGGbItCgD00nsO
        NHcP+fKNQ1ryAHB4Yyo4xtw95DuzSVKQB4BTG1PBA81dIDs77HjSb9Wi40nDgLIP7TwN1HDYKJR+goVb
        qAVBDxUcv98f1W7uPGxNnQ85cefxPe8HWR5UO3N+LWWeIduiAFDb5HRwOyz5XtQkKcgDgA9KMLjNmHyH
        NkkK8gDAlnAeht64kL3Yks2Ttslq0THpcoYCAP0eUyAgE7B7TZwgGEQFhjHydnutlh+U2Dgjh62j92te
        dtCJSM89vc45vTu3bIsCwKsbcwc93YM79sjHPoiePADUmi/7mLuHfLUmSB4Apg79DVFsXqljHwCuMlcP
        +WrPPYxxhbSuTUSDWxAqLK9MxeZmqFb+VPOyg6DAxZ7PHWDyEM/559wkFVtgg2yLAsA5jbmDO9r9zN1D
        vtGpwHpdqwGMNSkYEfDkAeCCxrRmfsCySujYB4ArzVVF/odK1MDG9sjPucxODYJxVFiY1ZZDW5+7SAuT
        UNLFqL8MQ7Uwds5e7Tnnp0wdsi8KALU7+n7m7iHfG5skBXkAOKwxFZxi7h7ysQOvJw8A9Kx7eluoT0Xn
        rioA5CjtPhJDj+z87IcdWwigs+0oHGzFqKAwtdb3qud7vne92Hrt77x+b/hqG1T2RQGA+fmec83dQz5/
        AUEeABji9CMTvRmMIDs1G9rznjwAHNeYCjp/juzsh7+dHVaR3++/PxgA5GNC085SMbLSIjsBwQ/DwtMs
        SRCMo8JyUVNmqnTDcXpdm/HXQo2guie/7IsCABehn1f/Tam7qFtke57kAw8UaXXs5wHAceZO6JghxQuT
        p08eAHaUfEB5v7k7ZGM+A52iLPLxZelSib6SYmaejhm3z7nGXB2ysWYAzaxvSe17pz3yPbKzn7/nAHMH
        wTgqLLVhs5ZDLBnpmGAz9EDKRZash3yjAQBk80OScL2U2u76ywM7J0qMVNTwAeDYxtyDC5SHiZhjXwsS
        LcUdXseXN+YCZilua0lIQ9XcB4oPmLtDNj/Dj+DJSAQB9mhLwxOGnhukIsjqmI7ct+PMYKbhLpYkCMZR
        YeFO6O/AQKffvS1ZQse1MXg4yZL0kG9KAOABpaE2LXd8//CSp1ZbqE3wqVELKj4AUA1ndMKD7RPSdemo
        hHz3tCw6ZGNK8BDftmSke39j6vER6d0S3+9GDI6zLYsgmIYKDZ1KntoMtdocezoKd7IkPeRbGABAdobj
        vpNSDMPsuElLgslG04K75hhXSrVOyL0smw7ZmPNP9X4K3NWPsFMLZGdUZYx2khV391r/xBgflGJiULA6
        VGhYI8BTzOkH2bhT+4v0CnNXkX9SAAD59pdo+9ag8+9JUm2qby8AgOw7SGdIvunCswdnSwSJ2oSb3p0b
        ZKea/smUog5NgI9L+9opPeTbTiLwDLGHJSUtD/3QjzD09F8L34/hyrj4g7WhwsMdONdu5iqopHuYuarg
        l3jmvpO5BlEaOraYH8ATgMyvP1La0dz4i/yk3oImHqVh5iMBZE8pz+toyTM6jCb/XhJtfsbn3yqdJzFK
        QoAYHQVoUbr2O9IReb50ukSvfjF1GGSjg5G+mrMkhkFZeIQnAenLwB4XfhC06ILgqUEulmMkAkR1lR6Q
        72QphxpOb0JTEARLgi7gWjPi+ebukI0mAFX2nM+ZOwiCZUQXcW3+Pr3yL5FYA4BpzCdI10qewUlIQRAs
        AbqId5Wm9tjnMBQ5+BxCEARLgi5kOscWzR/IYWHT4sm9IAiWGF3QDBmy4Ad9ArUpxCy79RmJpsHgXIYg
        CJYcXeA8WLO7xHoHDLcxPLmzuYMgCIIgCIIgCIIgCIIgCILlZZttvgtay7urABb0CQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>